<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  
  <meta name="renderer" content="webkit">
  <meta http-equiv="X-UA-Compatible" content="IE=edge" >
  <link rel="dns-prefetch" href="http://cuikeyi.com">
  <title>iOS的UniversalLink开发总结 | 崔大王</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
  <meta name="description" content="一，简介通用链接是Apple在WWDC2015上为iOS9引入的一个新功能，是通过传统HTTP链接来启动App的技术。可以使用相同的网址打开网站和App。通过唯一的网址，就可以链接到App中具体的视图，不需要特殊的schema。如果用户没有安装App则链接到对应的普通网页。
二，对比URL Scheme跳转在iOS 9之前，我们从外部启动App都是通过URL scheme的方式进行跳转，开发者通过">
<meta property="og:type" content="article">
<meta property="og:title" content="iOS的UniversalLink开发总结">
<meta property="og:url" content="http://cuikeyi.com/2017/02/13/iOS的UniversalLink开发总结">
<meta property="og:site_name" content="崔大王">
<meta property="og:description" content="一，简介通用链接是Apple在WWDC2015上为iOS9引入的一个新功能，是通过传统HTTP链接来启动App的技术。可以使用相同的网址打开网站和App。通过唯一的网址，就可以链接到App中具体的视图，不需要特殊的schema。如果用户没有安装App则链接到对应的普通网页。
二，对比URL Scheme跳转在iOS 9之前，我们从外部启动App都是通过URL scheme的方式进行跳转，开发者通过">
<meta property="og:image" content="http://fetest.xiaohongchun.com/text/universalLink_01.png">
<meta property="og:image" content="http://fetest.xiaohongchun.com/text/universalLink_02.png">
<meta property="og:image" content="http://fetest.xiaohongchun.com/text/universalLink_03.png">
<meta property="og:image" content="http://fetest.xiaohongchun.com/text/universalLink_04.png">
<meta property="og:updated_time" content="2017-02-13T07:01:18.000Z">
<meta name="twitter:card" content="summary">
<meta name="twitter:title" content="iOS的UniversalLink开发总结">
<meta name="twitter:description" content="一，简介通用链接是Apple在WWDC2015上为iOS9引入的一个新功能，是通过传统HTTP链接来启动App的技术。可以使用相同的网址打开网站和App。通过唯一的网址，就可以链接到App中具体的视图，不需要特殊的schema。如果用户没有安装App则链接到对应的普通网页。
二，对比URL Scheme跳转在iOS 9之前，我们从外部启动App都是通过URL scheme的方式进行跳转，开发者通过">
<meta name="twitter:image" content="http://fetest.xiaohongchun.com/text/universalLink_01.png">
  
    <link rel="alternative" href="/atom.xml" title="崔大王" type="application/atom+xml">
  
  
    <link rel="icon" href="/favicon.png">
  
  <link rel="stylesheet" href="/main.css">
  

</head>

<body>
  <div id="container">
    <div class="left-col">
      <div class="overlay"></div>
<div class="intrude-less">
	<header id="header" class="inner">
		<a href="/" class="profilepic">
			
			<img src="http://ohc6xoujj.bkt.clouddn.com/avatar.JPG" class="js-avatar">
			
		</a>

		<hgroup>
		  <h1 class="header-author"><a href="/">崔大王</a></h1>
		</hgroup>

		

		<nav class="header-menu">
			<ul>
			
			</ul>
		</nav>
		<nav class="header-smart-menu">
	        
    		
    			
    			<a class="js-smart-menu" data-idx="0" href="javascript:void(0)">所有文章</a>
    			
    			
            
    			
    			<a class="js-smart-menu" data-idx="1" href="javascript:void(0)">标签</a>
    			
    			
            
    			
    			<a class="js-smart-menu" data-idx="2" href="javascript:void(0)">关于我</a>
    			
    			
            
		</nav>
		<nav class="header-nav">
			<div class="social">
				
					<a class="weibo" target="_blank" href="http://weibo.com/cuikeyi520" title="weibo">weibo</a>
		        
			</div>
		</nav>
	</header>		
</div>

    </div>
    <div class="mid-col">
      <nav id="mobile-nav">
  	<div class="overlay">
  		<div class="slider-trigger"><i class="icon-list"></i></div>
  		<h1 class="header-author js-mobile-header hide">崔大王</h1>
  	</div>
	<div class="intrude-less">
		<header id="header" class="inner">
			<div class="profilepic">
				
					<img src="http://ohc6xoujj.bkt.clouddn.com/avatar.JPG" class="js-avatar">
				
			</div>
			<hgroup>
			  <h1 class="header-author">崔大王</h1>
			</hgroup>
			
			<nav class="header-menu">
				<ul>
				
				</ul>
			</nav>
			<nav class="header-nav">
				<div class="social">
					
						<a class="weibo" target="_blank" href="http://weibo.com/cuikeyi520" title="weibo">weibo</a>
			        
				</div>
			</nav>
		</header>				
	</div>
</nav>

      <div class="body-wrap">
        <article id="post-iOS的UniversalLink开发总结" class="article article-type-post" itemscope itemprop="blogPost">
  <div class="article-inner">
    
      <input type="hidden" class="isFancy" />
    
    
      <header class="article-header">
        
  
    <h1 class="article-title" itemprop="name">
      iOS的UniversalLink开发总结
    </h1>
  

      </header>
    
    <div class="article-entry" itemprop="articleBody">
      
        <h3 id="一，简介"><a href="#一，简介" class="headerlink" title="一，简介"></a>一，简介</h3><p>通用链接是Apple在WWDC2015上为iOS9引入的一个新功能，是通过传统HTTP链接来启动App的技术。可以使用相同的网址打开网站和App。通过唯一的网址，就可以链接到App中具体的视图，不需要特殊的schema。如果用户没有安装App则链接到对应的普通网页。</p>
<h3 id="二，对比URL-Scheme跳转"><a href="#二，对比URL-Scheme跳转" class="headerlink" title="二，对比URL Scheme跳转"></a>二，对比URL Scheme跳转</h3><p>在iOS 9之前，我们从外部启动App都是通过URL scheme的方式进行跳转，开发者通过配置info.plist文件中的 URL Types 可以轻松实现跳转，而且现在苹果还对这种跳转的方式加了一个提示框：“是否打开XXX”，跳转过程也显得不流畅。</p>
<p>而UniversalLink跳转方式可以实现无缝跳转，当浏览器识别到预先指定好的URL，就可以直接唤醒App，不需要在浏览器中打开再去点击其他按钮。</p>
<h3 id="三，开发步骤"><a href="#三，开发步骤" class="headerlink" title="三，开发步骤"></a>三，开发步骤</h3><h4 id="1，打开Associated-Domains服务"><a href="#1，打开Associated-Domains服务" class="headerlink" title="1，打开Associated Domains服务"></a>1，打开Associated Domains服务</h4><p>登录开发者账号，在Identifiers下AppIDs找到自己的App ID，编辑打开Associated Domains服务。</p>
<p><img src="http://fetest.xiaohongchun.com/text/universalLink_01.png" alt="image"></p>
<h4 id="2-在Xcode中开启Associated-Domains服务"><a href="#2-在Xcode中开启Associated-Domains服务" class="headerlink" title="2,在Xcode中开启Associated Domains服务"></a>2,在Xcode中开启Associated Domains服务</h4><p>找到工程的Capabilities -&gt; Associated Domains，打开此功能，在Domains中添加跳转域名，域名的格式为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">applinks:www.example.com</span><br></pre></td></tr></table></figure></p>
<p>注：<br>①，你的服务器必须支持SSL；<br>②，Domains可以添加多个；<br>③，Domains必须以 applinks: 开头；</p>
<p><img src="http://fetest.xiaohongchun.com/text/universalLink_02.png" alt="image"></p>
<h4 id="3，配置-apple-app-site-association-文件"><a href="#3，配置-apple-app-site-association-文件" class="headerlink" title="3，配置 apple-app-site-association 文件"></a>3，配置 apple-app-site-association 文件</h4><p>苹果官方给出的格式如下图所示：</p>
<p><img src="http://fetest.xiaohongchun.com/text/universalLink_03.png" alt="image"></p>
<p>其中apps项必须对应一个空的数组，details项对应一个字典的数组，其中appID对应项由前缀和ID两部分组成，可以在developer.apple.com中的Identifiers→AppIDs中点击对应的App ID查看。</p>
<p><img src="http://fetest.xiaohongchun.com/text/universalLink_04.png" alt="image"></p>
<p>paths对应域名中的path，用于过滤可以跳转到App的链接，支持通配符‘*’，‘？’以及‘NOT’进行匹配，匹配的优先级是从左至右依次降低。</p>
<p>最后，需要把配置好的json文件上传到服务器中该域名的根目录下，也就是说，我们可以用GET请求可以获取到这个apple-app-association文件。</p>
<p>当我们的App在设备上第一次运行时，如果支持Associated Domains功能，那么iOS会自动去GET定义的Domain下的apple-app-site-association文件。</p>
<p>需要留意iOS会先请求 <a href="https://domain.com/.well-known/apple-app-site-association" target="_blank" rel="external">https://domain.com/.well-known/apple-app-site-association</a> 如果此文件请求不到，再去请求 <a href="https://domain.com/apple-app-site-association" target="_blank" rel="external">https://domain.com/apple-app-site-association</a> 。所以如果想要避免服务器接收过多GET请求，可以直接把apple-app-site-association放在./well-known/目录下。</p>
<h4 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h4><p>服务器上apple-app-site-association的更新不会让iOS本地的apple-app-site-association同步更新，即iOS只会在App第一次启动时请求一次，以后除非App更新或重新安装否则不会在每次打开时请求apple-app-site-association。</p>
<h4 id="4，Xcode代码处理"><a href="#4，Xcode代码处理" class="headerlink" title="4，Xcode代码处理"></a>4，Xcode代码处理</h4><p>当服务器部署完成之后，我们需要在AppDelegate中实现代理方法：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)application:(<span class="built_in">UIApplication</span> *)application continueUserActivity:(<span class="built_in">NSUserActivity</span> *)userActivity restorationHandler:(<span class="keyword">void</span> (^)(<span class="built_in">NSArray</span> * _Nullable))restorationHandler</span><br></pre></td></tr></table></figure></p>
<p>具体实现如下：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)application:(<span class="built_in">UIApplication</span> *)application continueUserActivity:(<span class="built_in">NSUserActivity</span> *)userActivity restorationHandler:(<span class="keyword">void</span> (^)(<span class="built_in">NSArray</span> * _Nullable))restorationHandler&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (![userActivity.activityType isEqualToString:<span class="built_in">NSUserActivityTypeBrowsingWeb</span>]) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取url地址</span></span><br><span class="line"><span class="built_in">NSURL</span> *jumpUrl = userActivity.webpageURL;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> handle jump code</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="5，测试过程"><a href="#5，测试过程" class="headerlink" title="5，测试过程"></a>5，测试过程</h4><p>最简单的测试方法，是在系统的短信中点击一个URL直接跳转到App，点击之前定义的链接，如果能跳转到App内，就正明配置成功了。</p>
<h4 id="6，总结"><a href="#6，总结" class="headerlink" title="6，总结"></a>6，总结</h4><p>1）apple-app-site-association不需要.json后缀。</p>
<p>2）如果要对没有path的域名进行支持（如：www.163.com），在json文件的paths中用通配符’*’是不行的，需要在paths数组中加入’/’进行匹配。</p>
<p>3）对json文件的请求仅在App第一次启动时进行，如果此时网络连接出了问题apple会缓存请求，等有网的时候再去请求，而实际测试抓包并没有请求故通用连接会失效。</p>
<p>4）paths匹配的优先级是从左至右依次降低，但需要明确，否则会出问题。比如”paths”:[ “NOT /together/<em>“,”</em>“]，在IOS9.2上path为/together/*都不会跳到App，但是在IOS9.0上会跳到。</p>
<p>5）从iOS 9.2开始，在相同的domain内Universal Links是不work的，必须要跨域才生效</p>
<h4 id="7，参考链接"><a href="#7，参考链接" class="headerlink" title="7，参考链接"></a>7，参考链接</h4><p>1）<a href="https://developer.apple.com/library/content/documentation/General/Conceptual/AppSearch/UniversalLinks.html#//apple_ref/doc/uid/TP40016308-CH12-SW1" target="_blank" rel="external">https://developer.apple.com/library/content/documentation/General/Conceptual/AppSearch/UniversalLinks.html#//apple_ref/doc/uid/TP40016308-CH12-SW1</a> 官网链接</p>

      
    </div>
    <div class="article-info article-info-index">
      
      <a href="/2017/02/13/iOS的UniversalLink开发总结" class="archive-article-date">
  	<time datetime="2017-02-13T06:58:54.000Z" itemprop="datePublished"><i class="icon-clock"></i>2017-02-13</time>
</a>
      
	<div class="article-tag tagcloud">
		<i class="icon-price-tags"></i>
		<ul class="article-tag-list"><li class="article-tag-list-item"><a class="article-tag-list-link" href="/tags/iOS/">iOS</a></li></ul>
	</div>

      

      <div class="clearfix"></div>
    </div>
  </div>
</article>

  
<nav id="article-nav">
  
  
    <a href="/2016/12/09/iOS推送总结" id="article-nav-older" class="article-nav-link-wrap">
      <div class="article-nav-title">iOS推送总结</div>
      <i class="icon-circle-right"></i>
    </a>
  
</nav>




<div class="share_jia">
	<!-- JiaThis Button BEGIN -->
	<div class="jiathis_style">
		<span class="jiathis_txt">Share to: &nbsp; </span>
		<a class="jiathis_button_facebook"></a> 
	    <a class="jiathis_button_twitter"></a>
	    <a class="jiathis_button_plus"></a> 
	    <a class="jiathis_button_tsina"></a>
		<a class="jiathis_button_cqq"></a>
		<a class="jiathis_button_douban"></a>
		<a class="jiathis_button_weixin"></a>
		<a class="jiathis_button_tumblr"></a>
    <a href="http://www.jiathis.com/share" class="jiathis jiathis_txt jtico jtico_jiathis" target="_blank"></a>
	</div>
	<script type="text/javascript" src="//v3.jiathis.com/code/jia.js?uid=1405949716054953" charset="utf-8"></script>
	<!-- JiaThis Button END -->
</div>









      </div>
      <footer id="footer">
  <div class="outer">
    <div id="footer-info">
    	<div class="footer-left">
    		&copy; 2017 崔大王
    	</div>
      	<div class="footer-right">
      		<a href="http://hexo.io/" target="_blank">Hexo</a>  Theme <a href="https://github.com/litten/hexo-theme-yilia" target="_blank">Yilia</a> by Litten
      	</div>
    </div>
  </div>
</footer>
    </div>
    <script>
	var yiliaConfig = {
		fancybox: true,
		mathjax: false,
		animate: true,
		isHome: false,
		isPost: true,
		isArchive: false,
		isTag: false,
		isCategory: false,
		open_in_new: false,
		root: "/",
		innerArchive: true
	}
</script>

<script src="/./main.js"></script>


    
<div class="tools-col">
  <ul class="btn-wrap">
    
      <li class="chose" data-hook="tools-section-all"><span class="text">全部</span><i class="icon-book"></i></li>
    
    
      <li data-hook="tools-section-tag"><span class="text">标签</span><i class="icon-price-tags"></i></li>
    
    
    
      <li data-hook="tools-section-me"><span class="text">我</span><i class="icon-smile"></i></li>
    
  </ul>
  <div class="tools-wrap">
    
    	<section class="tools-section tools-section-all chose">
    	</section>
    

    
    	<section class="tools-section tools-section-tag">
    			<div class="widget tagcloud" id="js-tagcloud">
    				<a href="/tags/Autolayout/" style="font-size: 10px;">Autolayout</a> <a href="/tags/HHRouter/" style="font-size: 10px;">HHRouter</a> <a href="/tags/iOS/" style="font-size: 20px;">iOS</a> <a href="/tags/runtime/" style="font-size: 10px;">runtime</a> <a href="/tags/排序/" style="font-size: 10px;">排序</a> <a href="/tags/推送/" style="font-size: 10px;">推送</a>
    			</div>
    	</section>
    

    

    
    	<section class="tools-section tools-section-me">
  	  	
  	  		<div class="aboutme-wrap" id="js-aboutme">大家好&lt;br&gt;&lt;br&gt;非著名iOS开发者&lt;br&gt;每天都需要不断的学习</div>
  	  	
    	</section>
    
  </div>
  
</div>
    <!-- Root element of PhotoSwipe. Must have class pswp. -->
<div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">

    <!-- Background of PhotoSwipe. 
         It's a separate element as animating opacity is faster than rgba(). -->
    <div class="pswp__bg"></div>

    <!-- Slides wrapper with overflow:hidden. -->
    <div class="pswp__scroll-wrap">

        <!-- Container that holds slides. 
            PhotoSwipe keeps only 3 of them in the DOM to save memory.
            Don't modify these 3 pswp__item elements, data is added later on. -->
        <div class="pswp__container">
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
        </div>

        <!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->
        <div class="pswp__ui pswp__ui--hidden">

            <div class="pswp__top-bar">

                <!--  Controls are self-explanatory. Order can be changed. -->

                <div class="pswp__counter"></div>

                <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>

                <button class="pswp__button pswp__button--share" style="display:none" title="Share"></button>

                <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>

                <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>

                <!-- Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR -->
                <!-- element will get class pswp__preloader--active when preloader is running -->
                <div class="pswp__preloader">
                    <div class="pswp__preloader__icn">
                      <div class="pswp__preloader__cut">
                        <div class="pswp__preloader__donut"></div>
                      </div>
                    </div>
                </div>
            </div>

            <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                <div class="pswp__share-tooltip"></div> 
            </div>

            <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">
            </button>

            <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">
            </button>

            <div class="pswp__caption">
                <div class="pswp__caption__center"></div>
            </div>

        </div>

    </div>

</div>
  </div>
</body>
</html>