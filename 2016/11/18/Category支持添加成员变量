<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  
  <title>Category支持添加成员变量 | 崔大王</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
  <meta name="description" content="在Category中使用@property也是只会生成setter和getter方法的声明，如果我们真的需要给Category增加属性的实现，需要借助于运行时的两个函数：1）obj_setAssociatedObject2）obj_getAssociatedObject
首先介绍一下@property，它的本质其实是ivar（实例变量）+ getter方法 + setter方法。所以在Catego">
<meta property="og:type" content="article">
<meta property="og:title" content="Category支持添加成员变量">
<meta property="og:url" content="http://cuidawang.github.io/2016/11/18/Category支持添加成员变量">
<meta property="og:site_name" content="崔大王">
<meta property="og:description" content="在Category中使用@property也是只会生成setter和getter方法的声明，如果我们真的需要给Category增加属性的实现，需要借助于运行时的两个函数：1）obj_setAssociatedObject2）obj_getAssociatedObject
首先介绍一下@property，它的本质其实是ivar（实例变量）+ getter方法 + setter方法。所以在Catego">
<meta property="og:updated_time" content="2016-11-18T06:47:18.000Z">
<meta name="twitter:card" content="summary">
<meta name="twitter:title" content="Category支持添加成员变量">
<meta name="twitter:description" content="在Category中使用@property也是只会生成setter和getter方法的声明，如果我们真的需要给Category增加属性的实现，需要借助于运行时的两个函数：1）obj_setAssociatedObject2）obj_getAssociatedObject
首先介绍一下@property，它的本质其实是ivar（实例变量）+ getter方法 + setter方法。所以在Catego">
  
    <link rel="alternate" href="/atom.xml" title="崔大王" type="application/atom+xml">
  
  
    <link rel="icon" href="/favicon.png">
  
  
    <link href="//fonts.googleapis.com/css?family=Source+Code+Pro" rel="stylesheet" type="text/css">
  
  <link rel="stylesheet" href="/css/style.css">
  

</head>

<body>
  <div id="container">
    <div id="wrap">
      <header id="header">
  <div id="banner"></div>
  <div id="header-outer" class="outer">
    <div id="header-title" class="inner">
      <h1 id="logo-wrap">
        <a href="/" id="logo">崔大王</a>
      </h1>
      
    </div>
    <div id="header-inner" class="inner">
      <nav id="main-nav">
        <a id="main-nav-toggle" class="nav-icon"></a>
        
          <a class="main-nav-link" href="/">Home</a>
        
          <a class="main-nav-link" href="/archives">Archives</a>
        
      </nav>
      <nav id="sub-nav">
        
          <a id="nav-rss-link" class="nav-icon" href="/atom.xml" title="RSS Feed"></a>
        
        <a id="nav-search-btn" class="nav-icon" title="搜索"></a>
      </nav>
      <div id="search-form-wrap">
        <form action="//google.com/search" method="get" accept-charset="UTF-8" class="search-form"><input type="search" name="q" results="0" class="search-form-input" placeholder="Search"><button type="submit" class="search-form-submit">&#xF002;</button><input type="hidden" name="sitesearch" value="http://cuidawang.github.io"></form>
      </div>
    </div>
  </div>
</header>
      <div class="outer">
        <section id="main"><article id="post-Category支持添加成员变量" class="article article-type-post" itemscope itemprop="blogPost">
  <div class="article-meta">
    <a href="/2016/11/18/Category支持添加成员变量" class="article-date">
  <time datetime="2016-11-18T05:30:53.000Z" itemprop="datePublished">2016-11-18</time>
</a>
    
  </div>
  <div class="article-inner">
    
    
      <header class="article-header">
        
  
    <h1 class="article-title" itemprop="name">
      Category支持添加成员变量
    </h1>
  

      </header>
    
    <div class="article-entry" itemprop="articleBody">
      
        <p>在Category中使用@property也是只会生成setter和getter方法的声明，如果我们真的需要给Category增加属性的实现，需要借助于运行时的两个函数：<br>1）obj_setAssociatedObject<br>2）obj_getAssociatedObject</p>
<p>首先介绍一下@property，它的本质其实是ivar（实例变量）+ getter方法 + setter方法。<br>所以在Category中重写getter和setter方法，再添加一个ivar的变量，就可以实现@property的功能了。</p>
<p>举个例子，给UIView的分类添加三个属性，height（NSNumber）， page（NSInteger）， name（NSString）<br>👇 👇 👇</p>
<pre><code>#import &lt;UIKit/UIKit.h&gt; //    .h文件

@interface UIView (Category)

@property (nonatomic, strong) NSNumber *height;
@property (nonatomic, assign) NSInteger page;
@property (nonatomic, copy) NSString *name;

@end
</code></pre><p>👇 👇 👇</p>
<pre><code>#import &quot;UIView+Category.h&quot;
#import &lt;objc/runtime.h&gt;

@implementation UIView (Category) //    .m文件

@dynamic height, page, name;

- (void)setHeight:(NSNumber *)height
{
    objc_setAssociatedObject(self, @&quot;height&quot;, height, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
}

- (NSNumber *)height
{
    return objc_getAssociatedObject(self, @&quot;height&quot;);
}

- (void)setName:(NSString *)name
{
    objc_setAssociatedObject(self, @&quot;name&quot;, name, OBJC_ASSOCIATION_COPY);
}

- (NSString *)name
{
    return objc_getAssociatedObject(self, @&quot;name&quot;);
}

- (void)setPage:(NSInteger)page
{
    objc_setAssociatedObject(self, @&quot;page&quot;, @(page), OBJC_ASSOCIATION_RETAIN_NONATOMIC);
}

- (NSInteger)page
{
    return [(NSNumber *)objc_getAssociatedObject(self, @&quot;page&quot;) integerValue];
}

@end
</code></pre><p>以上代码就实现了给Category动态添加属性。下面介绍这两个方法<br>1，objc_setAssociatedObject(id object, const void *key, id value, objc_AssociationPolicy policy)<br>这个函数需要四个参数：源对象，关键字，关联的对象和一个关联策略。</p>
<ul>
<li>@param object： 源对象 self</li>
<li>@param key：    唯一静态变量Key</li>
<li>@param value：关联的对象</li>
<li>@param policy： 关联政策,相当于属性括号中的限定条件</li>
</ul>
<p>typedef OBJC_ENUM(uintptr_t, objc_AssociationPolicy) {<br>    OBJC_ASSOCIATION_ASSIGN = 0,           // 👉(assign)<br>    OBJC_ASSOCIATION_RETAIN_NONATOMIC = 1, // 👉(nonatomic, retain)<br>    OBJC_ASSOCIATION_COPY_NONATOMIC = 3,   // 👉(nonatomic, copy)<br>    OBJC_ASSOCIATION_RETAIN = 01401,       // 👉(retain)<br>    OBJC_ASSOCIATION_COPY = 01403          // 👉(copy)<br>};</p>
<p>2，objc_getAssociatedObject(id object, const void *key)<br>这个函数用于获取关联对象的结果。</p>
<ul>
<li>@param object： 源对象 self</li>
<li>@param key：    唯一静态变量Key</li>
</ul>
<p>👆👆👆<br>利用以上的方法，就可以给Category添加属性了。</p>

      
    </div>
    <footer class="article-footer">
      <a data-url="http://cuidawang.github.io/2016/11/18/Category支持添加成员变量" data-id="civtgemuv0000b0fy5kmkachp" class="article-share-link">Share</a>
      
      
    </footer>
  </div>
  
    
<nav id="article-nav">
  
    <a href="/2016/11/22/奇偶排序" id="article-nav-newer" class="article-nav-link-wrap">
      <strong class="article-nav-caption">Newer</strong>
      <div class="article-nav-title">
        
          奇偶排序
        
      </div>
    </a>
  
  
    <a href="/2016/05/15/hello-world" id="article-nav-older" class="article-nav-link-wrap">
      <strong class="article-nav-caption">Older</strong>
      <div class="article-nav-title">Hello World</div>
    </a>
  
</nav>

  
</article>

</section>
        
          <aside id="sidebar">
  
    

  
    
  <div class="widget-wrap">
    <h3 class="widget-title">标签</h3>
    <div class="widget">
      <ul class="tag-list"><li class="tag-list-item"><a class="tag-list-link" href="/tags/ios/">ios</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/排序/">排序</a></li></ul>
    </div>
  </div>


  
    
  <div class="widget-wrap">
    <h3 class="widget-title">标签云</h3>
    <div class="widget tagcloud">
      <a href="/tags/ios/" style="font-size: 10px;">ios</a> <a href="/tags/排序/" style="font-size: 10px;">排序</a>
    </div>
  </div>

  
    
  <div class="widget-wrap">
    <h3 class="widget-title">归档</h3>
    <div class="widget">
      <ul class="archive-list"><li class="archive-list-item"><a class="archive-list-link" href="/archives/2016/11/">十一月 2016</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2016/05/">五月 2016</a></li></ul>
    </div>
  </div>


  
    
  <div class="widget-wrap">
    <h3 class="widget-title">最新文章</h3>
    <div class="widget">
      <ul>
        
          <li>
            <a href="/2016/11/22/实现一个不持有元素的数组">实现一个不持有元素的数组</a>
          </li>
        
          <li>
            <a href="/2016/11/22/奇偶排序">奇偶排序</a>
          </li>
        
          <li>
            <a href="/2016/11/18/Category支持添加成员变量">Category支持添加成员变量</a>
          </li>
        
          <li>
            <a href="/2016/05/15/hello-world">Hello World</a>
          </li>
        
      </ul>
    </div>
  </div>

  
</aside>
        
      </div>
      <footer id="footer">
  
  <div class="outer">
    <div id="footer-info" class="inner">
      &copy; 2016 崔大王<br>
      Powered by <a href="http://hexo.io/" target="_blank">Hexo</a>
    </div>
  </div>
</footer>
    </div>
    <nav id="mobile-nav">
  
    <a href="/" class="mobile-nav-link">Home</a>
  
    <a href="/archives" class="mobile-nav-link">Archives</a>
  
</nav>
    

<script src="//ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>


  <link rel="stylesheet" href="/fancybox/jquery.fancybox.css">
  <script src="/fancybox/jquery.fancybox.pack.js"></script>


<script src="/js/script.js"></script>

  </div>
</body>
</html>