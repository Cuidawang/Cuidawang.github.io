<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  
  <meta name="renderer" content="webkit">
  <meta http-equiv="X-UA-Compatible" content="IE=edge" >
  <link rel="dns-prefetch" href="http://cuikeyi.com">
  <title>HHRouter应用与自我理解完善 | 崔大王</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
  <meta name="description" content="1、HHRouter介绍HHRouter介绍：https://github.com/Huohua/HHRouter
HHRouter 不依赖于其他库，自己实现了一套简单的 Mapping 算法，性能特别不错，更优于同类Router框架，特别值得推荐使用，因为功能单一，所以性能很强，简单可依赖！
简单使用：只需要在使用之前，先使用map关联1[[HHRouter shared] map:@&quot;one&quot;">
<meta property="og:type" content="article">
<meta property="og:title" content="HHRouter应用与自我理解完善">
<meta property="og:url" content="http://cuikeyi.com/2016/12/05/HHRouter应用与自我理解完善">
<meta property="og:site_name" content="崔大王">
<meta property="og:description" content="1、HHRouter介绍HHRouter介绍：https://github.com/Huohua/HHRouter
HHRouter 不依赖于其他库，自己实现了一套简单的 Mapping 算法，性能特别不错，更优于同类Router框架，特别值得推荐使用，因为功能单一，所以性能很强，简单可依赖！
简单使用：只需要在使用之前，先使用map关联1[[HHRouter shared] map:@&quot;one&quot;">
<meta property="og:updated_time" content="2016-12-05T07:59:32.000Z">
<meta name="twitter:card" content="summary">
<meta name="twitter:title" content="HHRouter应用与自我理解完善">
<meta name="twitter:description" content="1、HHRouter介绍HHRouter介绍：https://github.com/Huohua/HHRouter
HHRouter 不依赖于其他库，自己实现了一套简单的 Mapping 算法，性能特别不错，更优于同类Router框架，特别值得推荐使用，因为功能单一，所以性能很强，简单可依赖！
简单使用：只需要在使用之前，先使用map关联1[[HHRouter shared] map:@&quot;one&quot;">
  
    <link rel="alternative" href="/atom.xml" title="崔大王" type="application/atom+xml">
  
  
    <link rel="icon" href="/favicon.png">
  
  <link rel="stylesheet" href="/main.css">
  

</head>

<body>
  <div id="container">
    <div class="left-col">
      <div class="overlay"></div>
<div class="intrude-less">
	<header id="header" class="inner">
		<a href="/" class="profilepic">
			
			<img src="http://ohc6xoujj.bkt.clouddn.com/avatar.JPG" class="js-avatar">
			
		</a>

		<hgroup>
		  <h1 class="header-author"><a href="/">崔大王</a></h1>
		</hgroup>

		

		<nav class="header-menu">
			<ul>
			
			</ul>
		</nav>
		<nav class="header-smart-menu">
	        
    		
    			
    			<a class="js-smart-menu" data-idx="0" href="javascript:void(0)">所有文章</a>
    			
    			
            
    			
    			<a class="js-smart-menu" data-idx="1" href="javascript:void(0)">标签</a>
    			
    			
            
    			
    			<a class="js-smart-menu" data-idx="2" href="javascript:void(0)">关于我</a>
    			
    			
            
		</nav>
		<nav class="header-nav">
			<div class="social">
				
					<a class="weibo" target="_blank" href="http://weibo.com/cuikeyi520" title="weibo">weibo</a>
		        
			</div>
		</nav>
	</header>		
</div>

    </div>
    <div class="mid-col">
      <nav id="mobile-nav">
  	<div class="overlay">
  		<div class="slider-trigger"><i class="icon-list"></i></div>
  		<h1 class="header-author js-mobile-header hide">崔大王</h1>
  	</div>
	<div class="intrude-less">
		<header id="header" class="inner">
			<div class="profilepic">
				
					<img src="http://ohc6xoujj.bkt.clouddn.com/avatar.JPG" class="js-avatar">
				
			</div>
			<hgroup>
			  <h1 class="header-author">崔大王</h1>
			</hgroup>
			
			<nav class="header-menu">
				<ul>
				
				</ul>
			</nav>
			<nav class="header-nav">
				<div class="social">
					
						<a class="weibo" target="_blank" href="http://weibo.com/cuikeyi520" title="weibo">weibo</a>
			        
				</div>
			</nav>
		</header>				
	</div>
</nav>

      <div class="body-wrap">
        <article id="post-HHRouter应用与自我理解完善" class="article article-type-post" itemscope itemprop="blogPost">
  <div class="article-inner">
    
      <input type="hidden" class="isFancy" />
    
    
      <header class="article-header">
        
  
    <h1 class="article-title" itemprop="name">
      HHRouter应用与自我理解完善
    </h1>
  

      </header>
    
    <div class="article-entry" itemprop="articleBody">
      
        <h3 id="1、HHRouter介绍"><a href="#1、HHRouter介绍" class="headerlink" title="1、HHRouter介绍"></a>1、HHRouter介绍</h3><p>HHRouter介绍：<a href="https://github.com/Huohua/HHRouter" target="_blank" rel="external">https://github.com/Huohua/HHRouter</a></p>
<p>HHRouter 不依赖于其他库，自己实现了一套简单的 Mapping 算法，性能特别不错，更优于同类Router框架，特别值得推荐使用，因为功能单一，所以性能很强，简单可依赖！</p>
<p>简单使用：<br>只需要在使用之前，先使用map关联<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[HHRouter shared] map:<span class="string">@"one"</span> toControllerClass:[OneViewController class]];</span><br></pre></td></tr></table></figure></p>
<p>在跳转时，只需要：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIViewController</span> *vc = [[HHRouter shared] matchController:<span class="string">@"one"</span>];</span><br><span class="line">[<span class="keyword">self</span>.navigationController pushViewController:vc animated:<span class="literal">YES</span>];</span><br></pre></td></tr></table></figure></p>
<h3 id="2、HHRouter简单使用"><a href="#2、HHRouter简单使用" class="headerlink" title="2、HHRouter简单使用"></a>2、HHRouter简单使用</h3><h4 id="传值"><a href="#传值" class="headerlink" title="传值"></a>传值</h4><p>如果跳转时需要传值，需要在定义Router时候传入参数值：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[HHRouter shared] map:<span class="string">@"/user/:userId/"</span> toControllerClass:[UserViewController class]];</span><br></pre></td></tr></table></figure></p>
<p>跳转的时候修改如下：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIViewController</span> *vc = [[HHRouter shared] matchController:<span class="string">@"/user/10086/"</span>];</span><br><span class="line">[<span class="keyword">self</span>.navigationController pushViewController:vc animated:<span class="literal">YES</span>];</span><br></pre></td></tr></table></figure></p>
<p>HHRouter在使用URL传值的时候，对应的key和value对应存到params字典中，这个字典是在UIViewController Category中定义的属性。vc的params（类型是字典）中会保存这个router传过来的值（@{user: 10086}）</p>
<h4 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h4><p>HHRouter也支持URL查询参数，这样去写：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义</span></span><br><span class="line">[[HHRouter shared] map:<span class="string">@"/user/:userId"</span> toControllerClass:[UserViewController class]];</span><br><span class="line"><span class="comment">// 调用跳转</span></span><br><span class="line"><span class="built_in">UIViewController</span> *vc = [[HHRouter shared] matchController:<span class="string">@"/user/10086?name=小明"</span>];</span><br><span class="line"><span class="comment">// 输出的结果为小明</span></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, vc.params[<span class="string">@"name"</span>]);</span><br></pre></td></tr></table></figure></p>
<h4 id="Block"><a href="#Block" class="headerlink" title="Block"></a>Block</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)map:(<span class="built_in">NSString</span> *)route toBlock:(HHRouterBlock)block;</span><br><span class="line"></span><br><span class="line">- (HHRouterBlock)matchBlock:(<span class="built_in">NSString</span> *)route;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">id</span>)callBlock:(<span class="built_in">NSString</span> *)route;</span><br></pre></td></tr></table></figure>
<p>定义Block<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义查询名字叫blockTest， params需要传入的参数，返回的是处理结果</span></span><br><span class="line">[[HHRouter shared] map:<span class="string">@"blockTest"</span> toBlock:^<span class="keyword">id</span>(<span class="built_in">NSDictionary</span> *params) &#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, params);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="string">@"我是处理结果"</span>;</span><br><span class="line"></span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure></p>
<p>调用方法：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第一种调用方法</span></span><br><span class="line">HHRouterBlock block = [[HHRouter shared] matchBlock:<span class="string">@"blockTest"</span>];</span><br><span class="line"><span class="keyword">id</span> result = block(@&#123;<span class="string">@"name"</span>: <span class="string">@"Tom"</span>, <span class="string">@"height"</span>: @<span class="number">190</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二种调用方法</span></span><br><span class="line">HHRouterBlock block = [[HHRouter shared] callBlock:<span class="string">@"blockTest"</span>];</span><br><span class="line"><span class="keyword">id</span> result = block(@&#123;<span class="string">@"name"</span>: <span class="string">@"Tom"</span>, <span class="string">@"height"</span>: @<span class="number">190</span>&#125;);</span><br></pre></td></tr></table></figure></p>
<h4 id="自我优化"><a href="#自我优化" class="headerlink" title="自我优化"></a>自我优化</h4><p>上面提到HHRouter通过URL传值时，值是存在UIViewController中的params属性中，需要自己提取，用起来有些尴尬。基于上述原因，我在UIViewController的基类BaseViewController中，利用runtime将params中的key与UIViewController中的属性一一对应起来。<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"BaseViewController.h"</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">&lt;objc/runtime.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">BaseViewController</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">BaseViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    <span class="comment">// Do any additional setup after loading the view.</span></span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> setupVariable];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 赋值变量</span></span><br><span class="line">- (<span class="keyword">void</span>)setupVariable</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">self</span>.params) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 获取属性列表</span></span><br><span class="line">    Ivar *members = class_copyIvarList([<span class="keyword">self</span> class], &amp;count);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">        Ivar var = members[i];</span><br><span class="line">        <span class="comment">// 获取变量名称</span></span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span> *name = ivar_getName(var);</span><br><span class="line">        <span class="comment">// 获取变量类型</span></span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span> *type = ivar_getTypeEncoding(var);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"%s -&gt; %s"</span>, name, type);</span><br><span class="line">        <span class="comment">// 获取变量的ivar</span></span><br><span class="line">        Ivar ivar = class_getInstanceVariable([<span class="keyword">self</span> class], name);</span><br><span class="line">        <span class="comment">// 将char类型转为string类型，以属性userId为例，得到的nameStr是 _userId</span></span><br><span class="line">        <span class="built_in">NSString</span> *nameStr = [<span class="built_in">NSString</span> stringWithCString:name encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">        <span class="comment">// 去掉nameStr前的"_",此时nameKey是 userId</span></span><br><span class="line">        <span class="built_in">NSString</span> *nameKey = [nameStr substringFromIndex:<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> ([<span class="keyword">self</span>.params.allKeys containsObject:nameKey]) &#123;</span><br><span class="line">            <span class="comment">// 对应上后进行赋值</span></span><br><span class="line">            object_setIvar(<span class="keyword">self</span>, ivar, <span class="keyword">self</span>.params[nameKey]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"赋值完成了"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>上述内容就是自己对HHRouter的简单理解，如果有什么好的意见和优化，欢迎指教，学无止境，共勉。</p>

      
    </div>
    <div class="article-info article-info-index">
      
      <a href="/2016/12/05/HHRouter应用与自我理解完善" class="archive-article-date">
  	<time datetime="2016-12-05T06:00:42.000Z" itemprop="datePublished"><i class="icon-clock"></i>2016-12-05</time>
</a>
      
	<div class="article-tag tagcloud">
		<i class="icon-price-tags"></i>
		<ul class="article-tag-list"><li class="article-tag-list-item"><a class="article-tag-list-link" href="/tags/HHRouter/">HHRouter</a></li><li class="article-tag-list-item"><a class="article-tag-list-link" href="/tags/runtime/">runtime</a></li></ul>
	</div>

      

      <div class="clearfix"></div>
    </div>
  </div>
</article>

  
<nav id="article-nav">
  
    <a href="/2016/12/09/iOS推送总结" id="article-nav-newer" class="article-nav-link-wrap">
      <i class="icon-circle-left"></i>
      <div class="article-nav-title">
        
          iOS推送总结
        
      </div>
    </a>
  
  
    <a href="/2016/11/27/利用Autolayout实现View间隔自动调整" id="article-nav-older" class="article-nav-link-wrap">
      <div class="article-nav-title">利用Autolayout实现View间隔自动调整</div>
      <i class="icon-circle-right"></i>
    </a>
  
</nav>




<div class="share_jia">
	<!-- JiaThis Button BEGIN -->
	<div class="jiathis_style">
		<span class="jiathis_txt">Share to: &nbsp; </span>
		<a class="jiathis_button_facebook"></a> 
	    <a class="jiathis_button_twitter"></a>
	    <a class="jiathis_button_plus"></a> 
	    <a class="jiathis_button_tsina"></a>
		<a class="jiathis_button_cqq"></a>
		<a class="jiathis_button_douban"></a>
		<a class="jiathis_button_weixin"></a>
		<a class="jiathis_button_tumblr"></a>
    <a href="http://www.jiathis.com/share" class="jiathis jiathis_txt jtico jtico_jiathis" target="_blank"></a>
	</div>
	<script type="text/javascript" src="//v3.jiathis.com/code/jia.js?uid=1405949716054953" charset="utf-8"></script>
	<!-- JiaThis Button END -->
</div>









      </div>
      <footer id="footer">
  <div class="outer">
    <div id="footer-info">
    	<div class="footer-left">
    		&copy; 2017 崔大王
    	</div>
      	<div class="footer-right">
      		<a href="http://hexo.io/" target="_blank">Hexo</a>  Theme <a href="https://github.com/litten/hexo-theme-yilia" target="_blank">Yilia</a> by Litten
      	</div>
    </div>
  </div>
</footer>
    </div>
    <script>
	var yiliaConfig = {
		fancybox: true,
		mathjax: false,
		animate: true,
		isHome: false,
		isPost: true,
		isArchive: false,
		isTag: false,
		isCategory: false,
		open_in_new: false,
		root: "/",
		innerArchive: true
	}
</script>

<script src="/./main.js"></script>


    
<div class="tools-col">
  <ul class="btn-wrap">
    
      <li class="chose" data-hook="tools-section-all"><span class="text">全部</span><i class="icon-book"></i></li>
    
    
      <li data-hook="tools-section-tag"><span class="text">标签</span><i class="icon-price-tags"></i></li>
    
    
    
      <li data-hook="tools-section-me"><span class="text">我</span><i class="icon-smile"></i></li>
    
  </ul>
  <div class="tools-wrap">
    
    	<section class="tools-section tools-section-all chose">
    	</section>
    

    
    	<section class="tools-section tools-section-tag">
    			<div class="widget tagcloud" id="js-tagcloud">
    				<a href="/tags/Autolayout/" style="font-size: 10px;">Autolayout</a> <a href="/tags/HHRouter/" style="font-size: 10px;">HHRouter</a> <a href="/tags/iOS/" style="font-size: 20px;">iOS</a> <a href="/tags/runtime/" style="font-size: 10px;">runtime</a> <a href="/tags/排序/" style="font-size: 10px;">排序</a> <a href="/tags/推送/" style="font-size: 10px;">推送</a>
    			</div>
    	</section>
    

    

    
    	<section class="tools-section tools-section-me">
  	  	
  	  		<div class="aboutme-wrap" id="js-aboutme">大家好&lt;br&gt;&lt;br&gt;非著名iOS开发者&lt;br&gt;每天都需要不断的学习</div>
  	  	
    	</section>
    
  </div>
  
</div>
    <!-- Root element of PhotoSwipe. Must have class pswp. -->
<div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">

    <!-- Background of PhotoSwipe. 
         It's a separate element as animating opacity is faster than rgba(). -->
    <div class="pswp__bg"></div>

    <!-- Slides wrapper with overflow:hidden. -->
    <div class="pswp__scroll-wrap">

        <!-- Container that holds slides. 
            PhotoSwipe keeps only 3 of them in the DOM to save memory.
            Don't modify these 3 pswp__item elements, data is added later on. -->
        <div class="pswp__container">
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
        </div>

        <!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->
        <div class="pswp__ui pswp__ui--hidden">

            <div class="pswp__top-bar">

                <!--  Controls are self-explanatory. Order can be changed. -->

                <div class="pswp__counter"></div>

                <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>

                <button class="pswp__button pswp__button--share" style="display:none" title="Share"></button>

                <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>

                <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>

                <!-- Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR -->
                <!-- element will get class pswp__preloader--active when preloader is running -->
                <div class="pswp__preloader">
                    <div class="pswp__preloader__icn">
                      <div class="pswp__preloader__cut">
                        <div class="pswp__preloader__donut"></div>
                      </div>
                    </div>
                </div>
            </div>

            <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                <div class="pswp__share-tooltip"></div> 
            </div>

            <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">
            </button>

            <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">
            </button>

            <div class="pswp__caption">
                <div class="pswp__caption__center"></div>
            </div>

        </div>

    </div>

</div>
  </div>
</body>
</html>